// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Users {
  id          Int           @id @default(autoincrement())
  email       String        @unique
  password    String
  createAt    DateTime      @default(now())
  Credentials Credentials[]
  SafetyNotes SafetyNotes[]
  Cards       Cards[]
  Network     Network[]
}

model Credentials {
  id         Int      @id @default(autoincrement())
  user       Users    @relation(fields: [userId], references: [id])
  userId     Int
  url        String
  password   String
  title      String
  createAt DateTime @default(now())

  @@unique([userId, title])
}

model SafetyNotes {
  id         Int      @id @default(autoincrement())
  user       Users    @relation(fields: [userId], references: [id])
  userId     Int
  noteTitle  String
  title      String
  annotation String
  createAt DateTime @default(now())

  @@unique([userId, title])
}

model Cards {
  id             Int      @id @default(autoincrement())
  user           Users    @relation(fields: [userId], references: [id])
  userId         Int
  title          String
  number         String
  cardholderName String
  securityCode   String
  expirationDate String
  password       String
  isVirtual      Boolean
  type           CardType
  createAt       DateTime @default(now())

  @@unique([userId, title])
}

enum CardType {
  both
  credit
  debit

  @@map("cardType")
}

model Network {
  id       Int      @id @default(autoincrement())
  user     Users    @relation(fields: [userId], references: [id])
  userId   Int
  title    String
  name     String
  password String
  createAt DateTime @default(now())

  @@unique([userId, title])
}
